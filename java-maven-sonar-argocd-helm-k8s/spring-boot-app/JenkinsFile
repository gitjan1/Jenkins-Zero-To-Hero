pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'main', url: 'https://github.com/gitjan1/Jenkins-Zero-To-Hero.git'
      }
    }
    
    stage('Static Code Analysis') {
      steps {
            script {
             withSonarQubeEnv('sonarqube') {
             sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar'
               }
             timeout(time: 1, unit:'HOURS') {
             def qg = waitForQualityGate()
                if (qg.status != 'OK') {
                error "Pipeline aborted due to qualtigate error: ${qg.status}"
                }
            }
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
    }
}
}
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "janadevps1/ultimate-cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred2')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred2") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "gitjan1"
            }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "jana.oem1@gmail.com"
                    git config user.name "gitjan1"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i'' "s/replaceImage/janadevps1\\/ultimate-cicd:${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-mainfests-original/deployment-orig.yml
                    cp java-maven-sonar-argocd-helm-k8s/spring-boot-app-mainfests-original/deployment-orig.yml java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    sed -i'' "s/janadevps1\\/ultimate-cicd.*/replaceImage/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-mainfests-original/deployment-orig.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
